{"version":3,"sources":["controllers/vote.ts"],"names":[],"mappings":"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","file":"vote.js","sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport { default as VoteSourceModel, VoteSourceDocument } from '../models/VoteSource';\r\nimport VoteChoiceDTO from '../../../shared/VoteChoiceDTO';\r\nimport VoteSourceDTO from '../../../shared/VoteSourceDTO';\r\nimport * as utils from '../utils';\r\nimport { OperationResult, CreateOperationResult } from '../../../shared/OperationResult';\r\n\r\nexport const voteSMS = (request: Request, response: Response) => {\r\n    response.header('Content-Type', 'text/xml');\r\n    const body = request.param('Body').trim();\r\n\r\n    // the number the vote it being sent to (this should match an Event)\r\n    const to = request.param('To').slice(1);\r\n\r\n    // the voter, use this to keep people from voting more than once\r\n    const from = request.param('From');\r\n\r\n    VoteSourceModel.find( { PhoneNumber: to } )\r\n        .limit(1)\r\n        .exec((err, votes: VoteSourceDocument[]) => {\r\n        const vote = votes[0];\r\n        if (err) {\r\n            console.log(err);\r\n            // silently fail for the user\r\n            response.send('<Response></Response>');\r\n        }\r\n        else if (!vote.Enabled) {\r\n            response.send('<Response><Sms>Voting is now closed.</Sms></Response>');\r\n        }\r\n        else if (!utils.testint(body)) {\r\n            console.log('Bad vote: ' + vote.Name + ', ' + from + ', ' + body);\r\n            response.send('<Response><Sms>Sorry, invalid vote. Please text a number between 1 and ' + vote.Choices.length + '</Sms></Response>');\r\n        }\r\n        else if (utils.testint(body) && (parseInt(body) <= 0 || parseInt(body) > vote.Choices.length)) {\r\n            console.log('Bad vote: ' + vote.Name + ', ' + from + ', ' + body + ', ' + ('[1-' + vote.Choices.length + ']'));\r\n            response.send('<Response><Sms>Sorry, invalid vote. Please text a number between 1 and ' + vote.Choices.length + '</Sms></Response>');\r\n        }\r\n        else if (vote.hasVoted(from)) {\r\n            console.log('Denying vote: ' + vote.Name + ', ' + from);\r\n            response.send('<Response><Sms>Sorry, you are only allowed to vote once.</Sms></Response>');\r\n        }\r\n        else {\r\n\r\n            const choice = parseInt(body);\r\n\r\n            vote.Choices[choice].Numbers.push(from);\r\n\r\n            vote.save((err) => {\r\n                if (err) {\r\n                    response.send('<Response><Sms>We encountered an error saving your vote. Try again?</Sms></Response>');\r\n                }\r\n                else {\r\n                    console.log('Accepting vote: ' + vote.Name + ', ' + from);\r\n                    response.send('<Response><Sms>Thanks for your vote for ' + vote.Name + '. Powered by Twilio.</Sms></Response>');\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\nexport const saveVote = (req: Request, res: Response, next: NextFunction) => {\r\n    const dto: VoteSourceDTO = req.body;\r\n    if (!dto._id) {\r\n        const vote = new VoteSourceModel(dto);\r\n        vote.save((err: any, product: VoteSourceDocument) => {\r\n            if (err) {\r\n                return next(err);\r\n            }\r\n\r\n            const result: CreateOperationResult = {\r\n                Success: true,\r\n                Id: product._id\r\n            };\r\n            res.json(result);\r\n        });\r\n    } else {\r\n        VoteSourceModel.findByIdAndUpdate(dto._id,\r\n            {\r\n                Name: dto.Name,\r\n                PhoneNumber: dto.PhoneNumber,\r\n                Enabled: dto.Enabled,\r\n                Choices: dto.Choices\r\n            },\r\n            { upsert: true },\r\n            (err: any, product: VoteSourceDocument) => {\r\n                if (err) {\r\n                    return next(err);\r\n                }\r\n\r\n                const result: CreateOperationResult = {\r\n                    Success: true,\r\n                    Id: product._id\r\n                };\r\n                res.json(result);\r\n            });\r\n    }\r\n};\r\n\r\nexport const deleteVote = (req: Request, res: Response, next: NextFunction) => {\r\n    VoteSourceModel.findByIdAndRemove(req.params.voteId, (err, res: VoteSourceDocument) => {\r\n        if (err) {\r\n            return next(err);\r\n        }\r\n\r\n        const result: OperationResult = {\r\n            Success: true\r\n        };\r\n    });\r\n};\r\n\r\nexport const getVotes = (req: Request, res: Response, next: NextFunction) => {\r\n    VoteSourceModel.find((err, votes: VoteSourceDocument[]) => {\r\n        if (err) {\r\n            return next(err);\r\n        }\r\n        votes = votes.map(v => {\r\n            v.Choices = v.Choices.sort((c1, c2) => c1.Order - c2.Order);\r\n            return v;\r\n        });\r\n        res.json(votes);\r\n    });\r\n};"]}