"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nodemailer = require("nodemailer");
const transporter = nodemailer.createTransport({
    service: 'SendGrid',
    auth: {
        user: process.env.SENDGRID_USER,
        pass: process.env.SENDGRID_PASSWORD
    }
});
/**
 * GET /contact
 * Contact form page.
 */
exports.getContact = (req, res) => {
    res.render('contact', {
        title: 'Contact'
    });
};
/**
 * POST /contact
 * Send a contact form via Nodemailer.
 */
exports.postContact = (req, res) => {
    req.assert('name', 'Name cannot be blank').notEmpty();
    req.assert('email', 'Email is not valid').isEmail();
    req.assert('message', 'Message cannot be blank').notEmpty();
    const errors = req.validationErrors();
    if (errors) {
        req.flash('errors', errors);
        return res.redirect('/contact');
    }
    const mailOptions = {
        to: 'your@email.com',
        from: `${req.body.name} <${req.body.email}>`,
        subject: 'Contact Form',
        text: req.body.message
    };
    transporter.sendMail(mailOptions, (err) => {
        if (err) {
            req.flash('errors', { msg: err.message });
            return res.redirect('/contact');
        }
        req.flash('success', { msg: 'Email has been sent successfully!' });
        res.redirect('/contact');
    });
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXJzL2NvbnRhY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBeUM7QUFLekMsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLGVBQWUsQ0FBQztJQUM3QyxPQUFPLEVBQUUsVUFBVTtJQUNuQixJQUFJLEVBQUU7UUFDSixJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhO1FBQy9CLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQjtLQUNwQztDQUNGLENBQUMsQ0FBQztBQUVIOzs7R0FHRztBQUNRLFFBQUEsVUFBVSxHQUFHLENBQUMsR0FBWSxFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3RELEdBQUcsQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO1FBQ3BCLEtBQUssRUFBRSxTQUFTO0tBQ2pCLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUVGOzs7R0FHRztBQUNRLFFBQUEsV0FBVyxHQUFHLENBQUMsR0FBWSxFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3ZELEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLHNCQUFzQixDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDdEQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNwRCxHQUFHLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBRTVELE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBRXRDLElBQUksTUFBTSxFQUFFO1FBQ1YsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDNUIsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ2pDO0lBRUQsTUFBTSxXQUFXLEdBQUc7UUFDbEIsRUFBRSxFQUFFLGdCQUFnQjtRQUNwQixJQUFJLEVBQUUsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRztRQUM1QyxPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO0tBQ3ZCLENBQUM7SUFFRixXQUFXLENBQUMsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO1FBQ3hDLElBQUksR0FBRyxFQUFFO1lBQ1AsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7WUFDMUMsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ2pDO1FBQ0QsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsRUFBRSxHQUFHLEVBQUUsbUNBQW1DLEVBQUUsQ0FBQyxDQUFDO1FBQ25FLEdBQUcsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDM0IsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMiLCJmaWxlIjoiY29udHJvbGxlcnMvY29udGFjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XG5pbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuXG5pbXBvcnQgZXhwcmVzc1ZhbGlkYXRvciA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yJyk7XG5cbmNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICBzZXJ2aWNlOiAnU2VuZEdyaWQnLFxuICBhdXRoOiB7XG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuU0VOREdSSURfVVNFUixcbiAgICBwYXNzOiBwcm9jZXNzLmVudi5TRU5ER1JJRF9QQVNTV09SRFxuICB9XG59KTtcblxuLyoqXG4gKiBHRVQgL2NvbnRhY3RcbiAqIENvbnRhY3QgZm9ybSBwYWdlLlxuICovXG5leHBvcnQgbGV0IGdldENvbnRhY3QgPSAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHJlcy5yZW5kZXIoJ2NvbnRhY3QnLCB7XG4gICAgdGl0bGU6ICdDb250YWN0J1xuICB9KTtcbn07XG5cbi8qKlxuICogUE9TVCAvY29udGFjdFxuICogU2VuZCBhIGNvbnRhY3QgZm9ybSB2aWEgTm9kZW1haWxlci5cbiAqL1xuZXhwb3J0IGxldCBwb3N0Q29udGFjdCA9IChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpID0+IHtcbiAgcmVxLmFzc2VydCgnbmFtZScsICdOYW1lIGNhbm5vdCBiZSBibGFuaycpLm5vdEVtcHR5KCk7XG4gIHJlcS5hc3NlcnQoJ2VtYWlsJywgJ0VtYWlsIGlzIG5vdCB2YWxpZCcpLmlzRW1haWwoKTtcbiAgcmVxLmFzc2VydCgnbWVzc2FnZScsICdNZXNzYWdlIGNhbm5vdCBiZSBibGFuaycpLm5vdEVtcHR5KCk7XG5cbiAgY29uc3QgZXJyb3JzID0gcmVxLnZhbGlkYXRpb25FcnJvcnMoKTtcblxuICBpZiAoZXJyb3JzKSB7XG4gICAgcmVxLmZsYXNoKCdlcnJvcnMnLCBlcnJvcnMpO1xuICAgIHJldHVybiByZXMucmVkaXJlY3QoJy9jb250YWN0Jyk7XG4gIH1cblxuICBjb25zdCBtYWlsT3B0aW9ucyA9IHtcbiAgICB0bzogJ3lvdXJAZW1haWwuY29tJyxcbiAgICBmcm9tOiBgJHtyZXEuYm9keS5uYW1lfSA8JHtyZXEuYm9keS5lbWFpbH0+YCxcbiAgICBzdWJqZWN0OiAnQ29udGFjdCBGb3JtJyxcbiAgICB0ZXh0OiByZXEuYm9keS5tZXNzYWdlXG4gIH07XG5cbiAgdHJhbnNwb3J0ZXIuc2VuZE1haWwobWFpbE9wdGlvbnMsIChlcnIpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICByZXEuZmxhc2goJ2Vycm9ycycsIHsgbXNnOiBlcnIubWVzc2FnZSB9KTtcbiAgICAgIHJldHVybiByZXMucmVkaXJlY3QoJy9jb250YWN0Jyk7XG4gICAgfVxuICAgIHJlcS5mbGFzaCgnc3VjY2VzcycsIHsgbXNnOiAnRW1haWwgaGFzIGJlZW4gc2VudCBzdWNjZXNzZnVsbHkhJyB9KTtcbiAgICByZXMucmVkaXJlY3QoJy9jb250YWN0Jyk7XG4gIH0pO1xufTtcbiJdfQ==
