{"version":3,"sources":["controllers/register.ts"],"names":[],"mappings":";;;;;;;;;;AACA,yDAA4F;AAK5F,2CAAyC;AAEzC;;;GAGG;AACU,QAAA,KAAK,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,IAAI,KAAoB,CAAC;IACzB,IAAI,CAAC;QACD,KAAK,GAAG,MAAM,eAAU;aACnB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;aAC5B,IAAI,EAAE,CAAC;IAChB,CAAC;IAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,GAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE;QAC5B,KAAK,EAAE,iBAAiB;QACxB,SAAS,EAAE,KAAK,CAAC,IAAI;KACxB,CAAC,CAAC;AACP,CAAC,CAAA,CAAC;AAEF;;;GAGG;AACU,QAAA,gBAAgB,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAChF,sBAAiB,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,aAAqC,EAAE,EAAE;QAClE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QACD,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF;;;GAGG;AACU,QAAA,aAAa,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC7E,MAAM,GAAG,GAAoB,GAAG,CAAC,IAAI,CAAC;IAEtC,MAAM,YAAY,GAAG,IAAI,sBAAiB,CAAC,GAAG,CAAC,CAAC;IAChD,YAAY,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,OAA6B,EAAE,EAAE;QAC1D,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC;QAED,MAAM,MAAM,GAA0B;YAClC,OAAO,EAAE,IAAI;YACb,EAAE,EAAE,OAAO,CAAC,GAAG;SAClB,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC,CAAC","file":"register.js","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { default as RegistrationModel, RegistrationDocument } from '../models/Registration';\nimport RegistrationDTO from '../../../shared/RegistrationDTO';\nimport * as utils from '../utils';\nimport { OperationResult, CreateOperationResult } from '../../../shared/OperationResult';\nimport { EventDocument } from '../models/Event';\nimport EventModel from '../models/Event';\n\n/**\n * GET /\n * Event/{eventId}/Register\n */\nexport const index = async (req: Request, res: Response, next: NextFunction) => {\n    let event: EventDocument;\n    try {\n        event = await EventModel\n            .findById(req.params.eventId)\n            .exec();\n    } catch (err) {\n        console.log(err);\n        return next(err);\n    }\n    res.render('voterRegistration', {\n        title: 'Register voters',\n        EventName: event.Name\n    });\n};\n\n/**\n * GET /\n * api/Event/{eventId}/Registrations\n */\nexport const getRegistrations = (req: Request, res: Response, next: NextFunction) => {\n    RegistrationModel.find((err, registrations: RegistrationDocument[]) => {\n        if (err) {\n            return next(err);\n        }\n        res.json(registrations);\n    });\n};\n\n/**\n * PUT /\n * api/Event/{eventId}/Registration\n */\nexport const registerVoter = (req: Request, res: Response, next: NextFunction) => {\n    const dto: RegistrationDTO = req.body;\n\n    const Registration = new RegistrationModel(dto);\n    Registration.save((err: any, product: RegistrationDocument) => {\n        if (err) {\n            return next(err);\n        }\n\n        const result: CreateOperationResult = {\n            Success: true,\n            Id: product._id\n        };\n    });\n};"]}