{"version":3,"sources":["common/ArrayExtensions.ts"],"names":[],"mappings":"AAQA,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAS;QAE1C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC;AACN,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;QAEpB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC,CAAC;AACN,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK;QAEtC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;AACN,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnC,CAAC;IACL,CAAC,CAAC;AACN,CAAC;AAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,SAAc;QAC3C,YAAY,CAAC;QACb,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,SAAS,CAAC,kDAAkD,CAAC,CAAC;QAC5E,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC;QACjC,MAAM,OAAO,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,KAAK,GAAQ,IAAI,CAAC;QAEtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC9B,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC,CAAC;AACN,CAAC","file":"ArrayExtensions.js","sourcesContent":["interface Array<T> {\r\n    contains(item: T): boolean;\r\n    addRange(items: T[]): void;\r\n    clear(): void;\r\n    clone(): Array<T>;\r\n    find(compareFn: (value: T) => boolean): T;\r\n}\r\n\r\nif (!Array.prototype.contains) {\r\n    Array.prototype.contains = function (item: any): boolean\r\n    {\r\n        return this.indexOf(item) >= 0;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.clear) {\r\n    Array.prototype.clear = function ()\r\n    {\r\n        this.length = 0;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.addRange) {\r\n    Array.prototype.addRange = function (items)\r\n    {\r\n        this.push.apply(this, items);\r\n    };\r\n}\r\n\r\nif (!Array.prototype.clone) {\r\n    Array.prototype.clone = function ()\r\n    {\r\n        if (this.length === 1) {\r\n            return [this[0]];\r\n        }\r\n        else {\r\n            return Array.apply(null, this);\r\n        }\r\n    };\r\n}\r\n\r\nif (!Array.prototype.find) {\r\n    Array.prototype.find = function (predicate: any) {\r\n        'use strict';\r\n        if (this == null) {\r\n            throw new TypeError('Array.prototype.find called on null or undefined');\r\n        }\r\n        if (typeof predicate !== 'function') {\r\n            throw new TypeError('predicate must be a function');\r\n        }\r\n        const list = Object(this);\r\n        const length = list.length >>> 0;\r\n        const thisArg = arguments[1];\r\n        let value: any = null;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            value = list[i];\r\n            if (predicate.call(thisArg, value, i, list)) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n}"]}