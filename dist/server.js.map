{"version":3,"sources":["server.ts"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["/**\r\n * Module dependencies.\r\n */\r\nimport * as express from 'express';\r\nimport * as compression from 'compression';  // compresses requests\r\nimport * as session from 'express-session';\r\nimport * as bodyParser from 'body-parser';\r\nimport * as logger from 'morgan';\r\nimport * as errorHandler from 'errorhandler';\r\nimport * as lusca from 'lusca';\r\nimport * as dotenv from 'dotenv';\r\nimport * as mongo from 'connect-mongo';\r\nimport * as flash from 'express-flash';\r\nimport * as path from 'path';\r\nimport * as mongoose from 'mongoose';\r\nimport * as passport from 'passport';\r\nimport * as socketio from 'socket.io';\r\nimport * as http from 'http';\r\nimport * as twilio from 'twilio';\r\nimport twilioConfig from './config/twilio';\r\n\r\nimport expressValidator = require('express-validator');\r\n\r\n\r\nconst MongoStore = mongo(session);\r\n\r\n/**\r\n * Load environment variables from .env file, where API keys and passwords are configured.\r\n */\r\ndotenv.config({ path: path.join(__dirname, '.env') });\r\n\r\n\r\n/**\r\n * Controllers (route handlers).\r\n */\r\nimport * as homeController from './controllers/home';\r\nimport * as userController from './controllers/user';\r\nimport * as contactController from './controllers/contact';\r\nimport * as admninController from './controllers/admin';\r\nimport * as voteController from './controllers/vote';\r\n\r\n/**\r\n * API keys and Passport configuration.\r\n */\r\nimport * as passportConfig from './config/passport';\r\n\r\n/**\r\n * Create Express server.\r\n */\r\nconst app = express();\r\n\r\nconst httpServer = http.createServer(app);\r\nconst io = socketio(httpServer);\r\n\r\nio.on('connection', (socket: SocketIO.Socket) => {\r\n    console.log('a user connected');\r\n});\r\n\r\n/**\r\n * Connect to MongoDB.\r\n */\r\n// mongoose.Promise = global.Promise;\r\nmongoose.connect(process.env.MONGODB_URI || process.env.MONGOLAB_URI);\r\n\r\nmongoose.connection.on('error', () => {\r\n    console.log('MongoDB connection error. Please make sure MongoDB is running.');\r\n    process.exit();\r\n});\r\n\r\n\r\n\r\n/**\r\n * Express configuration.\r\n */\r\napp.set('port', process.env.PORT || 3000);\r\napp.set('views', path.join(__dirname, './views'));\r\napp.set('view engine', 'pug');\r\napp.use(compression());\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(expressValidator());\r\napp.use(session({\r\n    resave: true,\r\n    saveUninitialized: true,\r\n    secret: process.env.SESSION_SECRET,\r\n    store: new MongoStore({\r\n        url: process.env.MONGODB_URI || process.env.MONGOLAB_URI,\r\n        autoReconnect: true\r\n    })\r\n}));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\napp.use(lusca.xframe('SAMEORIGIN'));\r\napp.use(lusca.xssProtection(true));\r\napp.use((req, res, next) => {\r\n    res.locals.user = req.user;\r\n    next();\r\n});\r\napp.use((req, res, next) => {\r\n    // After successful login, redirect back to the intended page\r\n    if (!req.user &&\r\n        req.path !== '/login' &&\r\n        req.path !== '/signup' &&\r\n        !req.path.match(/^\\/auth/) &&\r\n        !req.path.match(/\\./)) {\r\n        req.session.returnTo = req.path;\r\n    } else if (req.user &&\r\n        req.path == '/account') {\r\n        req.session.returnTo = req.path;\r\n    }\r\n    next();\r\n});\r\napp.use(express.static(path.join(__dirname, 'public'), { maxAge: 31557600000 }));\r\n\r\nio.on('connection', (socket) => {\r\n    console.log('a user connected');\r\n});\r\n\r\n/**\r\n * Primary app routes.\r\n */\r\napp.get('/', homeController.index);\r\napp.get('/login', userController.getLogin);\r\napp.post('/login', userController.postLogin);\r\napp.get('/logout', userController.logout);\r\napp.get('/forgot', userController.getForgot);\r\napp.post('/forgot', userController.postForgot);\r\napp.get('/reset/:token', userController.getReset);\r\napp.post('/reset/:token', userController.postReset);\r\napp.get('/signup', userController.getSignup);\r\napp.post('/signup', userController.postSignup);\r\napp.get('/contact', contactController.getContact);\r\napp.post('/contact', contactController.postContact);\r\napp.get('/account', passportConfig.isAuthenticated, userController.getAccount);\r\napp.post('/account/profile', passportConfig.isAuthenticated, userController.postUpdateProfile);\r\napp.post('/account/password', passportConfig.isAuthenticated, userController.postUpdatePassword);\r\napp.post('/account/delete', passportConfig.isAuthenticated, userController.postDeleteAccount);\r\napp.get('/account/unlink/:provider', passportConfig.isAuthenticated, userController.getOauthUnlink);\r\napp.get('/vote', passportConfig.isAuthenticated, voteController.getVotes);\r\napp.post('/vote/', voteController.saveVote);\r\napp.delete('/vote/:voteId', voteController.deleteVote);\r\napp.post('/vote/sms', twilio.webhook(), voteController.voteSMS);\r\n\r\n\r\n/**\r\n * Error Handler. Provides full stack - remove for production\r\n */\r\napp.use(errorHandler());\r\n\r\n/**\r\n * Start Express server.\r\n */\r\napp.listen(app.get('port'), () => {\r\n    console.log(('  App is running at http://localhost:%d in %s mode'), app.get('port'), app.get('env'));\r\n    console.log('  Press CTRL-C to stop\\n');\r\n});\r\n\r\nmodule.exports = app;"]}