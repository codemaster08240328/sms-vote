"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mongoose = require("mongoose");
const EventContestantSchema = new mongoose.Schema({
    Name: String,
    ContestantNumber: Number,
});
const RoundContestantSchema = new mongoose.Schema({
    Name: String,
    ContestantNumber: Number,
    Votes: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Registration' }]
});
const RoundSchema = new mongoose.Schema({
    RoundNumber: Number,
    Contestants: [RoundContestantSchema],
    IsFinished: Boolean
});
const EventSchema = new mongoose.Schema({
    Name: { type: String, unique: true },
    Contestants: [EventContestantSchema],
    Rounds: [RoundSchema],
    PhoneNumber: String,
    Registrations: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Registration' }],
    CurrentRound: RoundSchema,
    Enabled: Boolean
});
EventSchema.methods.hasVoted = function (phoneNumber) {
    const thisEvent = this;
    return thisEvent.CurrentRound.Contestants.reduce((prev, cur) => prev.concat(cur.Votes.map(v => v.PhoneNumber)), [])
        .find(n => n === phoneNumber) ? true : false;
};
const EventModel = mongoose.model('Event', EventSchema);
exports.default = EventModel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy9FdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHFDQUFxQztBQWFyQyxNQUFNLHFCQUFxQixHQUFvQixJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDL0QsSUFBSSxFQUFFLE1BQU07SUFDWixnQkFBZ0IsRUFBRSxNQUFNO0NBQzNCLENBQUMsQ0FBQztBQUVILE1BQU0scUJBQXFCLEdBQW9CLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQztJQUMvRCxJQUFJLEVBQUUsTUFBTTtJQUNaLGdCQUFnQixFQUFFLE1BQU07SUFDeEIsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUMsQ0FBQztDQUN4RSxDQUFDLENBQUM7QUFFSCxNQUFNLFdBQVcsR0FBb0IsSUFBSSxRQUFRLENBQUMsTUFBTSxDQUFDO0lBQ3JELFdBQVcsRUFBRSxNQUFNO0lBQ25CLFdBQVcsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0lBQ3BDLFVBQVUsRUFBRSxPQUFPO0NBQ3RCLENBQUMsQ0FBQztBQUVILE1BQU0sV0FBVyxHQUFvQixJQUFJLFFBQVEsQ0FBQyxNQUFNLENBQUM7SUFDckQsSUFBSSxFQUFFLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0lBQ3BDLFdBQVcsRUFBRSxDQUFDLHFCQUFxQixDQUFDO0lBQ3BDLE1BQU0sRUFBRSxDQUFDLFdBQVcsQ0FBQztJQUNyQixXQUFXLEVBQUUsTUFBTTtJQUNuQixhQUFhLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFLGNBQWMsRUFBRSxDQUFDO0lBQzlFLFlBQVksRUFBRSxXQUFXO0lBQ3pCLE9BQU8sRUFBRSxPQUFPO0NBQ25CLENBQUMsQ0FBQztBQUVILFdBQVcsQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLFVBQVMsV0FBbUI7SUFDbkQsTUFBTSxTQUFTLEdBQW1CLElBQUssQ0FBQztJQUN4QyxPQUFPLFNBQVMsQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQWMsRUFBRSxHQUF1QixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDO1NBQzVJLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDckQsQ0FBQyxDQUFDO0FBRU4sTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBZ0IsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3ZFLGtCQUFlLFVBQVUsQ0FBQyIsImZpbGUiOiJtb2RlbHMvRXZlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XHJcblxyXG5pbXBvcnQgeyBSZWdpc3RyYXRpb25TY2hlbWEgfSBmcm9tICcuL1JlZ2lzdHJhdGlvbic7XHJcbmltcG9ydCBFdmVudERUTyBmcm9tICcuLi8uLi8uLi9zaGFyZWQvRXZlbnREVE8nO1xyXG5pbXBvcnQgUm91bmREVE8gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL1JvdW5kRFRPJztcclxuaW1wb3J0IFJvdW5kQ29udGVzdGFudERUTyBmcm9tICcuLi8uLi8uLi9zaGFyZWQvQ29udGVzdGFudERUTyc7XHJcbmltcG9ydCBSZWdpc3RyYXRpb25EVE8gZnJvbSAnLi4vLi4vLi4vc2hhcmVkL1JlZ2lzdHJhdGlvbkRUTyc7XHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBFdmVudERvY3VtZW50IGV4dGVuZHMgRXZlbnREVE8sIG1vbmdvb3NlLkRvY3VtZW50IHtcclxuICAgIGhhc1ZvdGVkKHBob25lTnVtYmVyOiBzdHJpbmcpOiBib29sZWFuO1xyXG59XHJcblxyXG5jb25zdCBFdmVudENvbnRlc3RhbnRTY2hlbWE6IG1vbmdvb3NlLlNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xyXG4gICAgTmFtZTogU3RyaW5nLFxyXG4gICAgQ29udGVzdGFudE51bWJlcjogTnVtYmVyLFxyXG59KTtcclxuXHJcbmNvbnN0IFJvdW5kQ29udGVzdGFudFNjaGVtYTogbW9uZ29vc2UuU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBOYW1lOiBTdHJpbmcsXHJcbiAgICBDb250ZXN0YW50TnVtYmVyOiBOdW1iZXIsXHJcbiAgICBWb3RlczogW3sgdHlwZTogbW9uZ29vc2UuU2NoZW1hLlR5cGVzLk9iamVjdElkLCByZWY6ICdSZWdpc3RyYXRpb24nfV1cclxufSk7XHJcblxyXG5jb25zdCBSb3VuZFNjaGVtYTogbW9uZ29vc2UuU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgICBSb3VuZE51bWJlcjogTnVtYmVyLFxyXG4gICAgQ29udGVzdGFudHM6IFtSb3VuZENvbnRlc3RhbnRTY2hlbWFdLFxyXG4gICAgSXNGaW5pc2hlZDogQm9vbGVhblxyXG59KTtcclxuXHJcbmNvbnN0IEV2ZW50U2NoZW1hOiBtb25nb29zZS5TY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcclxuICAgIE5hbWU6IHsgdHlwZTogU3RyaW5nLCB1bmlxdWU6IHRydWUgfSxcclxuICAgIENvbnRlc3RhbnRzOiBbRXZlbnRDb250ZXN0YW50U2NoZW1hXSxcclxuICAgIFJvdW5kczogW1JvdW5kU2NoZW1hXSxcclxuICAgIFBob25lTnVtYmVyOiBTdHJpbmcsXHJcbiAgICBSZWdpc3RyYXRpb25zOiBbeyB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuT2JqZWN0SWQsIHJlZjogJ1JlZ2lzdHJhdGlvbicgfV0sXHJcbiAgICBDdXJyZW50Um91bmQ6IFJvdW5kU2NoZW1hLFxyXG4gICAgRW5hYmxlZDogQm9vbGVhblxyXG59KTtcclxuXHJcbkV2ZW50U2NoZW1hLm1ldGhvZHMuaGFzVm90ZWQgPSBmdW5jdGlvbihwaG9uZU51bWJlcjogc3RyaW5nKTogYm9vbGVhbiB7XHJcbiAgICAgICAgY29uc3QgdGhpc0V2ZW50ID0gKDxFdmVudERvY3VtZW50PnRoaXMpO1xyXG4gICAgICAgIHJldHVybiB0aGlzRXZlbnQuQ3VycmVudFJvdW5kLkNvbnRlc3RhbnRzLnJlZHVjZSgocHJldjogc3RyaW5nW10sIGN1cjogUm91bmRDb250ZXN0YW50RFRPKSA9PiBwcmV2LmNvbmNhdChjdXIuVm90ZXMubWFwKHYgPT4gdi5QaG9uZU51bWJlcikpLCBbXSlcclxuICAgICAgICAgICAgLmZpbmQobiA9PiBuID09PSBwaG9uZU51bWJlcikgPyB0cnVlIDogZmFsc2U7XHJcbiAgICB9O1xyXG5cclxuY29uc3QgRXZlbnRNb2RlbCA9IG1vbmdvb3NlLm1vZGVsPEV2ZW50RG9jdW1lbnQ+KCdFdmVudCcsIEV2ZW50U2NoZW1hKTtcclxuZXhwb3J0IGRlZmF1bHQgRXZlbnRNb2RlbDsiXX0=
